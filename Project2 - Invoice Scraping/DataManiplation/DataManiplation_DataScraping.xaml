<Activity mc:Ignorable="sap sap2010" x:Class="DataScraping" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PdfFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_ExcelFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1446,7538</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DataScraping_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="58">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText=" Description:&#xA;            Automate the reading of the pdf file.&#xA;            Scrap_PDF_Data &#xA;           Automate the entering of the order information into an excel spreadsheet&#xA;&#xA;Pre-condition:&#xA;           - PDF invoices extracted from email and saved to &quot;Atachments&quot; folder&#xA;&#xA;Post-action:&#xA;          - PDF_Data scrapped successfully&#xA;          - Data from Data Table exports successfully to Excel file&#xD;&#xA;          - Upload order information to the queue" DisplayName="DataManiplation_DataScraping" sap:VirtualizedContainerService.HintSize="1033,7473" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message -start" sap:VirtualizedContainerService.HintSize="991,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;DataManiplation_DataScraping , has started excution&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="991,6927" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="subTotal" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Sequence - Try DataManiplation_DataScraping" sap:VirtualizedContainerService.HintSize="953,6700" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="pdfContent" />
            <Variable x:TypeArguments="x:String" Name="OrderInformation" />
            <Variable x:TypeArguments="sd:DataTable" Name="OrderInfTable" />
            <Variable x:TypeArguments="x:String" Name="total" />
            <Variable x:TypeArguments="x:String" Name="gst" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence- pre_condition check" sap:VirtualizedContainerService.HintSize="911,495" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Directory.Exists(in_PdfFolderPath)]" DisplayName="If the attachments folder exists" sap:VirtualizedContainerService.HintSize="755,403" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message - Attachments folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;DataManiplation_DataScraping, the folder exists&quot;]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence - if false" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message -  Attachments folder does not exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;DataManiplation_DataScraping , the file does not exist&quot;]" />
                  <Throw Exception="[new System.Exception(&quot;There is no PDF to be downloaded&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each PDF in Attachments folder" sap:VirtualizedContainerService.HintSize="911,5538" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Directory.GetFiles( in_PdfFolderPath)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="Pdf" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Sequence - pdf inf scraping" sap:VirtualizedContainerService.HintSize="875,5404" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:String[]" Name="pdfContentArray" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[Pdf]" sap:VirtualizedContainerService.HintSize="833,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[pdfContent]" />
                  <Assign DisplayName="Array of sentence" sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[pdfContentArray]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[pdfContent.split(Environment.NewLine.TocharArray)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign column headers" sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OrderInformation]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["ID|DESCRIPTION|QTY|PRICE|TOTAL"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each - line in pdf content" sap:VirtualizedContainerService.HintSize="833,4154" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[pdfContentArray]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="line" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body scraping inf" sap:VirtualizedContainerService.HintSize="797,4020" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="newline" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap2010:Annotation.AnnotationText="This condition is for pulling Invoice Number&#xA;Looks for &quot;Invoice # [0-9]*&quot; pattern. E.g &#xA;Invoice #  12345&#xA;" Condition="[System.Text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;Invoice # [0-9]*&quot;)]" DisplayName="Extraction of Invoice Number" sap:VirtualizedContainerService.HintSize="755,424" sap2010:WorkflowViewState.IdRef="If_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap2010:Annotation.AnnotationText="if matches then split by &quot;#&quot; and select the last string" sap:VirtualizedContainerService.HintSize="304,194" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="invoiceNumber" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[invoiceNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[line.ToString.Split("#"c).Last]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message -  if it does not match the regex of Invoice Number" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                          <If sap2010:Annotation.AnnotationText="This condition is for pulling Invoice Date&#xA;Use isMatch and Regex to look for &quot;Invoice Date: *&quot; .For e.g&#xA;Invoice Date: Sep 04 2020&#xA;" Condition="[System.Text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;Invoice Date: *&quot;)]" DisplayName="Extraction of Invoice Date" sap:VirtualizedContainerService.HintSize="755,424" sap2010:WorkflowViewState.IdRef="If_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap2010:Annotation.AnnotationText="If matches then split by &quot;:&quot; and select the last string" sap:VirtualizedContainerService.HintSize="304,194" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="invoiceDate" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[line.ToString.Split(":"c).Last]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message -  if it does not match the regex of order inf" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                          <If sap2010:Annotation.AnnotationText="This condition pulls the Order information" Condition="[System.text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;([0-9]+ .* ([A-z]|[^\w])* [0-9]+ .[0-9]+.[0-9]*)&quot;)]" DisplayName="Extraction of order information (id, description, quantity, price, total)" sap:VirtualizedContainerService.HintSize="755,1464" sap2010:WorkflowViewState.IdRef="If_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="if matches the regex" sap:VirtualizedContainerService.HintSize="376,1275" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - if match the regex of order inf" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line matchs the regex&quot;]" />
                                <Sequence sap:VirtualizedContainerService.HintSize="334,952" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Int32" Name="index" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[newline]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[line.ToString.Trim()]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[newline.IndexOf(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[newline]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[newline.Remove(index,1).Insert(index,"|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[newline.LastIndexOf(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[newline]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[newline.Remove(index,1).Insert(index,"|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[newline.LastIndexOf(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[newline]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[newline.Remove(index,1).Insert(index,"|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[newline.LastIndexOf(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[newline]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[newline.Remove(index,1).Insert(index,"|")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[OrderInformation]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[OrderInformation+vbCr+newline]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message -  if it does not match the regex of order inf" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                          <If sap2010:Annotation.AnnotationText="This condition pulls the Sub Total value" Condition="[System.Text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;Sub Total *&quot;)]" DisplayName="Extraction of Sub Total" sap:VirtualizedContainerService.HintSize="755,472" sap2010:WorkflowViewState.IdRef="If_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Sequence - True sub total" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - if match the regex of Sub Total" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line matchs the regex&quot;]" />
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[subTotal]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Split(line.ToString, "  ").Last]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message - if does not match the regex of Sub Total" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                          <If sap2010:Annotation.AnnotationText="This condition pulls GST value" Condition="[System.Text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;GST 8% *&quot;)]" DisplayName="Extraction of GST" sap:VirtualizedContainerService.HintSize="755,472" sap2010:WorkflowViewState.IdRef="If_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Sequence - True GST " sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - if match the regex of GST" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line matchs the regex&quot;]" />
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Split(line.ToString, "  ").Last]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message - if match the regex of GST" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                          <If sap2010:Annotation.AnnotationText="This condition pulls the Total value" Condition="[System.Text.RegularExpressions.Regex.IsMatch(line.ToString, &quot;Total *&quot;)]" DisplayName="Extraction of Total" sap:VirtualizedContainerService.HintSize="755,472" sap2010:WorkflowViewState.IdRef="If_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Sequence - True total" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - if match the regex of Total" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line matchs the regex&quot;]" />
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Split(line.ToString, "  ").Last]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message - if match the regex of Total" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;DataManiplation_DataScraping ,line does not match the regex&quot;]" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <ui:GenerateDataTable ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" AutoDetectTypes="False" CSVParsing="True" ColumnSeparators="|" DataTable="[OrderInfTable]" DisplayName="Generate Data Table - Order information" sap:VirtualizedContainerService.HintSize="833,200" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[OrderInformation]" UseColumnHeader="True" />
                  <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add SubTotal information to Datatable" ArrayRow="[{&quot;&quot;,&quot;&quot;,&quot;&quot;, &quot;&quot;, subTotal}]" DataTable="[OrderInfTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="833,64" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                  <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add GST information to Datatable" ArrayRow="[{&quot;&quot;,&quot;&quot;,&quot;&quot;, &quot;&quot;,gst}]" DataTable="[OrderInfTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="833,64" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                  <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add Total information to Datatable" ArrayRow="[{&quot;&quot;, &quot;&quot;,&quot;&quot;, &quot;&quot;,total}]" DataTable="[OrderInfTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="833,64" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[OrderInfTable]" DisplayName="Write Range - to excel file" sap:VirtualizedContainerService.HintSize="833,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[in_ExcelFolderPath+&quot;\&quot;+Path.GetFileNameWithoutExtension(Pdf).Split(&quot;_&quot;c)(0)+&quot;_&quot;+Path.GetFileNameWithoutExtension(Pdf).Split(&quot;_&quot;c)(2)+&quot;.xlsx&quot;]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File - Orchestrator_Queue" sap:VirtualizedContainerService.HintSize="833,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orchestrator\Orchestrator_Queue.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Total">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="total" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_SubTotal">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subTotal" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_GST">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="gst" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Sequence DisplayName="Sequence- post_condition check" sap:VirtualizedContainerService.HintSize="911,495" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Directory.Exists(in_ExcelFolderPath)]" DisplayName="If the GeneratedExcel folder exists" sap:VirtualizedContainerService.HintSize="755,403" sap2010:WorkflowViewState.IdRef="If_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message - excel files folder exists" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;DataManiplation_DataScraping, the folder exists&quot;]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence- if false " sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message - excel files folder does not exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;DataManiplation_DataScraping , the file does not exist&quot;]" />
                  <Throw DisplayName="Throw" Exception="[new System.Exception(&quot;There is no Excel Folder&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="957,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="Ex" />
            </ActivityAction.Argument>
            <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Error" Message="[&quot;DataManiplation_DataScraping, &quot;+Ex.Message+vbCr+&#xA;&quot;Source:&quot;+Ex.Source]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message - end" sap:VirtualizedContainerService.HintSize="991,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;DataManiplation_DataScraping , has ended excution&quot;]" />
  </Sequence>
</Activity>